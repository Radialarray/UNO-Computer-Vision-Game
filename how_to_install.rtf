{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 === N\'fctzliche Tools / Vorbedingungen
\b0 \
\
1. Editor mit Python-Support:\
	- PyCharm\
	- Sublime\
	- sonstige, nach eigenem Geschmack und Erfahrung, Syntaxhighlighting sollte jedoch \
	  mindestens dabei sein\'85\
\
2. Eventuell: Besseres Terminalprogram, Empfehlung: \'84iTerm2\'93 \
\
\

\b === CONDA installieren
\b0 \
\
Conda ist ein sogenannter Paketmanager f\'fcr wissenschaftliche Anwendungen auf Basis von Python. OpenCV und viele andere wichtige Tools f\'fcr Tracking und Computer Vision sind darin schon enthalten und verh\'e4ltnism\'e4\'dfig einfach zu installieren.  \
\
\
1. Download Installscript unter {\field{\*\fldinst{HYPERLINK "https://conda.io/miniconda.html"}}{\fldrslt https://conda.io/miniconda.html}}\
\
2. 
\f1 \expnd0\expndtw0\kerning0
chmod +x /Pfad/zu/Miniconda3-latest-MacOSX-x86_64.sh
\f0 \
\
3. 
\f1 ./Pfad/zur/Datei.sh
\f0 \
\
4. Installation ausf\'fchren / durchlaufen lassen\
\
\kerning1\expnd0\expndtw0 \

\b === ENVIRONMENT erzeugen und aktivieren
\b0 \
\
Sogenannte Environments erlauben eine isolierte Umgebung zu erzeugen, die nicht von der Konfiguration des restlichen Rechners / Python-Systems abh\'e4ngt, und diese auch nicht beeinflusst. Wir erzeugen uns ein eigenes Environment f\'fcr diesen Kurs, in welchem wir sp\'e4ter OpenCV etc. installieren (Befehl 1). Anschlie\'dfend setzen wir dieses Environment als aktive Arbeitsumgebung (Befehl 2).\
\pard\pardeftab720\sl320\partightenfactor0
\cf0 \
1. 
\f1 conda create --name=cvws2017 python=3.5 anaconda
\f0 \
\
2. 
\f1 source activate cvws2017
\f0 \
\
3. Um das Environment bei Bedarf wieder zu verlassen (Terminal schlie\'dfen geht aber auch): \
    
\f1 source deactivate
\f0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\

\b === PACKAGES installieren
\b0 \
\
Nachdem das Environment aktiv ist (zu erkennen am Name des Environments in Klammern, ganz vorne auf der Kommandozeile) m\'fcssen noch die Pakete f\'fcr OpenCV etc in das Environment installiert werden. \
\
1. 
\f1 pip install pillow\

\f0 Pillow ist eine Softwarebibliothek die Python erweiterte Bildverarbeitungsf\'e4higkeiten gibt\
\
2. 
\f1 conda install -c https://conda.anaconda.org/menpo opencv3\

\f0 Installiert OpenCV in Version 3.1.0\
\
3. 
\f1 conda config --add channels conda-forge\

\f0 F\'fcgt dem Conda-Paketmanager eine neue Quelle f\'fcr installierbare Software hinzu, in diesem Fall um auch dlib installieren zu k\'f6nnen.\
\
4. 
\f1 conda install dlib
\f0 \
\
5. Optional: Abschlie\'dfender Test\
        - Python aufrufen mit 
\f1 python
\f0  \
        - Folgende Befehle am Python-Eingabeprompt eingeben (ohne die >>>):\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1 \cf0 		>>> import cv2\
		>>> import dlib\
		>>> print(cv2.__version__)
\f0 \
 \
(oder die template.py ausprobieren mit 
\f1 python /Pfad/zur/template.py
\f0 )}